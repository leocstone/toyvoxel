#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall -std=c++17
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = -lglfw -lvulkan -ldl -lpthread -lX11 -lXxf86vm -lXrandr -lXi

INC_DEBUG = $(INC) -I./ -Isdf
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/toyvoxel

INC_RELEASE = $(INC) -I./ -Isdf
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/toyvoxel

OBJ_DEBUG = $(OBJDIR_DEBUG)/worldgenerator.o $(OBJDIR_DEBUG)/sdf/transformop.o $(OBJDIR_DEBUG)/sdf/sdfchain.o $(OBJDIR_DEBUG)/sdf/sdf.o $(OBJDIR_DEBUG)/sdf/primitive.o $(OBJDIR_DEBUG)/sdf/displacement.o $(OBJDIR_DEBUG)/ansi.o $(OBJDIR_DEBUG)/sdf/displacedsdf.o $(OBJDIR_DEBUG)/sdf/combineop.o $(OBJDIR_DEBUG)/perlin.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/lib/stb_image.o $(OBJDIR_DEBUG)/fontrenderer.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/worldgenerator.o $(OBJDIR_RELEASE)/sdf/transformop.o $(OBJDIR_RELEASE)/sdf/sdfchain.o $(OBJDIR_RELEASE)/sdf/sdf.o $(OBJDIR_RELEASE)/sdf/primitive.o $(OBJDIR_RELEASE)/sdf/displacement.o $(OBJDIR_RELEASE)/ansi.o $(OBJDIR_RELEASE)/sdf/displacedsdf.o $(OBJDIR_RELEASE)/sdf/combineop.o $(OBJDIR_RELEASE)/perlin.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/lib/stb_image.o $(OBJDIR_RELEASE)/fontrenderer.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/sdf || mkdir -p $(OBJDIR_DEBUG)/sdf
	test -d $(OBJDIR_DEBUG)/lib || mkdir -p $(OBJDIR_DEBUG)/lib

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/worldgenerator.o: worldgenerator.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c worldgenerator.cpp -o $(OBJDIR_DEBUG)/worldgenerator.o

$(OBJDIR_DEBUG)/sdf/transformop.o: sdf/transformop.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c sdf/transformop.cpp -o $(OBJDIR_DEBUG)/sdf/transformop.o

$(OBJDIR_DEBUG)/sdf/sdfchain.o: sdf/sdfchain.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c sdf/sdfchain.cpp -o $(OBJDIR_DEBUG)/sdf/sdfchain.o

$(OBJDIR_DEBUG)/sdf/sdf.o: sdf/sdf.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c sdf/sdf.cpp -o $(OBJDIR_DEBUG)/sdf/sdf.o

$(OBJDIR_DEBUG)/sdf/primitive.o: sdf/primitive.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c sdf/primitive.cpp -o $(OBJDIR_DEBUG)/sdf/primitive.o

$(OBJDIR_DEBUG)/sdf/displacement.o: sdf/displacement.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c sdf/displacement.cpp -o $(OBJDIR_DEBUG)/sdf/displacement.o

$(OBJDIR_DEBUG)/ansi.o: ansi.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ansi.cpp -o $(OBJDIR_DEBUG)/ansi.o

$(OBJDIR_DEBUG)/sdf/displacedsdf.o: sdf/displacedsdf.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c sdf/displacedsdf.cpp -o $(OBJDIR_DEBUG)/sdf/displacedsdf.o

$(OBJDIR_DEBUG)/sdf/combineop.o: sdf/combineop.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c sdf/combineop.cpp -o $(OBJDIR_DEBUG)/sdf/combineop.o

$(OBJDIR_DEBUG)/perlin.o: perlin.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c perlin.cpp -o $(OBJDIR_DEBUG)/perlin.o

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/lib/stb_image.o: lib/stb_image.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lib/stb_image.cpp -o $(OBJDIR_DEBUG)/lib/stb_image.o

$(OBJDIR_DEBUG)/fontrenderer.o: fontrenderer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c fontrenderer.cpp -o $(OBJDIR_DEBUG)/fontrenderer.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/sdf
	rm -rf $(OBJDIR_DEBUG)/lib

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/sdf || mkdir -p $(OBJDIR_RELEASE)/sdf
	test -d $(OBJDIR_RELEASE)/lib || mkdir -p $(OBJDIR_RELEASE)/lib

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/worldgenerator.o: worldgenerator.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c worldgenerator.cpp -o $(OBJDIR_RELEASE)/worldgenerator.o

$(OBJDIR_RELEASE)/sdf/transformop.o: sdf/transformop.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c sdf/transformop.cpp -o $(OBJDIR_RELEASE)/sdf/transformop.o

$(OBJDIR_RELEASE)/sdf/sdfchain.o: sdf/sdfchain.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c sdf/sdfchain.cpp -o $(OBJDIR_RELEASE)/sdf/sdfchain.o

$(OBJDIR_RELEASE)/sdf/sdf.o: sdf/sdf.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c sdf/sdf.cpp -o $(OBJDIR_RELEASE)/sdf/sdf.o

$(OBJDIR_RELEASE)/sdf/primitive.o: sdf/primitive.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c sdf/primitive.cpp -o $(OBJDIR_RELEASE)/sdf/primitive.o

$(OBJDIR_RELEASE)/sdf/displacement.o: sdf/displacement.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c sdf/displacement.cpp -o $(OBJDIR_RELEASE)/sdf/displacement.o

$(OBJDIR_RELEASE)/ansi.o: ansi.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ansi.cpp -o $(OBJDIR_RELEASE)/ansi.o

$(OBJDIR_RELEASE)/sdf/displacedsdf.o: sdf/displacedsdf.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c sdf/displacedsdf.cpp -o $(OBJDIR_RELEASE)/sdf/displacedsdf.o

$(OBJDIR_RELEASE)/sdf/combineop.o: sdf/combineop.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c sdf/combineop.cpp -o $(OBJDIR_RELEASE)/sdf/combineop.o

$(OBJDIR_RELEASE)/perlin.o: perlin.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c perlin.cpp -o $(OBJDIR_RELEASE)/perlin.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/lib/stb_image.o: lib/stb_image.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lib/stb_image.cpp -o $(OBJDIR_RELEASE)/lib/stb_image.o

$(OBJDIR_RELEASE)/fontrenderer.o: fontrenderer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c fontrenderer.cpp -o $(OBJDIR_RELEASE)/fontrenderer.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/sdf
	rm -rf $(OBJDIR_RELEASE)/lib

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

